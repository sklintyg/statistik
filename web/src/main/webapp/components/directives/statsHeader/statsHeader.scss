//local variables
$stats-header-user-min-width: 105px;
$stats-header-unit-min-width: 145px;

stats-header {
  @extend %st-typo-03;

  // Is a flex (root) container and is not itself a flexitem
  display: flex;
  //Stretch on cross-axis to make items 100% height
  align-items: stretch;
  justify-content: space-between;
  background-color: $st-color-35;
  color: $st-color-17;
  height: 80px;

  a {
    @extend %st-typo-05;
    color: $st-color-27;
  }

  i.fa {
    font-size: 24px;
    margin-right: 7px;
  }

  .header-user,
  .header-unit,
  .header-links,
  .header-logo {
    //Act as a flex horizontal container
    display: flex;
    //where its items are vertically centered..
    align-items: center;

    padding: 0 16px;
    white-space: nowrap;
  }

  .header-logo {
    flex: 1;
    min-width: 240px;
    max-width: 240px;

    img {
      height: 30px;
    }

    @media (max-width: $screen-xs-max) {
      min-width: 62px;
      max-width: 62px;
    }
  }

  .header-user {
    //default for this directive is to act as a non-growing, (aggressivly) shrinkable flex-item
    flex: 0 3 auto;

    //flex items must a some sort of width applied for it to be able to shrink
    //NOTE: when using min-width:0px (no unit), scss processing optimised it by
    // removing the unit, casuing rendering errorss in IE that doesnt handle unitless min-widths in flex context. took me 6 hours to find that ugh!
    min-width: $stats-header-user-min-width;
  }

  .header-unit {
    //default is to act as a non-growing, shrinkable flex-item
    flex: 0 1 auto;

    //flex items must a some sort of width applied for it to be able to shrink
    //NOTE: when using min-width:0px (no unit), scss processing optimised it by
    // removing the unit, casuing rendering errorss in IE that doesnt handle unitless min-widths in flex context. took me 6 hours to find that ugh!
    min-width: $stats-header-unit-min-width;

    .single-text-row-container {
      //lay out items horizontally
      display: flex;

      //if we user 0px / 0%, scss minification removes the unit - causing flexbox errors in IE, so we set 1px
      min-width: 1px;

      @media (max-width: $screen-xs-max) {
        flex-direction: column;
      }
    }

    .header-two-row {
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      min-width: 1px;
    }

    .verksamhets-name-label {
      padding-right: 10px;
    }
  }

  .header-links {
    //default is to act as a growing, shrinkable flex-item, taking excessive widths
    flex: 1 1 auto;
    //push all items to the right
    justify-content: flex-end;

    button {
      margin-left: 10px;
    }

    padding-right: 25px;
  }
}
