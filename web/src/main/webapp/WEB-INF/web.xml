<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0"
         metadata-complete="true">

    <display-name>Inera Statistics</display-name>

    <filter>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!-- Update RequestContext for spring session -->
    <filter>
        <filter-name>requestContextHolderUpdateFilter</filter-name>
        <filter-class>se.inera.intyg.infra.security.filter.RequestContextHolderUpdateFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>requestContextHolderUpdateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>LogMDCFilter</filter-name>
        <filter-class>se.inera.intyg.infra.monitoring.logging.LogMDCServletFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LogMDCFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- This filter will keep track of the time left on the session for a logged in user -->
    <filter>
        <filter-name>sessionTimeoutFilter</filter-name>
        <filter-class>se.inera.intyg.infra.security.filter.SessionTimeoutFilter</filter-class>
        <init-param>
            <param-name>skipRenewSessionUrls</param-name>
            <param-value>/api/session-auth-check/ping</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>sessionTimeoutFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- filter for internal requests -->
    <filter>
        <filter-name>internalApiFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>internalApiFilter</filter-name>
        <url-pattern>/api/internalapi/*</url-pattern><!-- DO NOT CHANGE THIS URL! -->
    </filter-mapping>

    <!-- Gzip compression of apis -->
    <!-- Filter for adding expiry (cache) header -->
    <filter>
        <filter-name>CompressingFilter</filter-name>
        <filter-class>com.github.ziplet.filter.compression.CompressingFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CompressingFilter</filter-name>
        <url-pattern>/app/*</url-pattern>
        <url-pattern>/js/*</url-pattern>
        <url-pattern>/api/getOverview</url-pattern>
        <url-pattern>/api/getNumberOfCasesPerMonth</url-pattern>
        <url-pattern>/api/getDiagnoskapitelstatistik</url-pattern>
        <url-pattern>/api/getAgeGroupsStatistics</url-pattern>
        <url-pattern>/api/getDegreeOfSickLeaveStatistics</url-pattern>
        <url-pattern>/api/getSickLeaveLengthData</url-pattern>
        <url-pattern>/api/getCountyStatistics</url-pattern>
        <url-pattern>/api/getSjukfallPerSexStatistics</url-pattern>
        <url-pattern>/api/getIcd10Structure</url-pattern>
        <url-pattern>/api/getIntygPerSjukfallTvarsnitt</url-pattern>
        <url-pattern>/api/login/getStaticData</url-pattern>
    </filter-mapping>

    <!-- Map cache filter to all static resources -->
    <filter>
        <filter-name>ExpiresFilter</filter-name>
        <filter-class>org.apache.catalina.filters.ExpiresFilter</filter-class>
        <init-param>
            <param-name>ExpiresDefault</param-name>
            <param-value>access plus 1 years</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>ExpiresFilter</filter-name>
        <url-pattern>/app/*</url-pattern>
        <url-pattern>/assets/*</url-pattern>
        <url-pattern>/js/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/application-context.xml</param-value>
    </context-param>
    <context-param>
        <param-name>logbackConfigParameter</param-name>
        <param-value>logback.file</param-value>
    </context-param>

    <servlet>
        <servlet-name>cxf</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Integration services (used for new HSA stubs under /services) -->
    <servlet>
        <servlet-name>services</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <init-param>
            <param-name>config-location</param-name>
            <param-value>/WEB-INF/services-cxf-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>metrics</servlet-name>
        <servlet-class>io.prometheus.client.exporter.MetricsServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>cxf</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>services</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>metrics</servlet-name>
        <url-pattern>/metrics</url-pattern>
    </servlet-mapping>

    <!-- Listener for external logback configuration file -->
    <listener>
        <listener-class>se.inera.intyg.infra.monitoring.logging.LogbackConfiguratorContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>se.inera.statistics.web.listener.UnregisterServicesListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>se.inera.statistics.web.service.monitoring.SessionCounterListener</listener-class>
    </listener>

    <error-page>
        <error-code>404</error-code>
        <location>/404.html</location>
    </error-page>

    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error.jsp</location>
    </error-page>

</web-app>

