########################################
#
# HSA-Integration Configurations
#
########################################

# Default app name (might be overridden by OCP)
app.name=statistik

# Default DB (MySQL) configuration
db.driver=com.mysql.cj.jdbc.Driver
db.url=jdbc:mysql://${db.server}:${db.port}/${db.name}?useSSL=false&serverTimezone=Europe/Stockholm
db.username=
db.password=
db.port=3306
db.pool.maxSize=20

# Hibernate stuff
hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
hibernate.hbm2ddl.auto=
hibernate.show_sql=false
hibernate.format_sql=false

# hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

activemq.broker.url=vm://localhost?broker.persistent=false
activemq.broker.username=
activemq.broker.password=
activemq.receiver.queue.name=certificate.queue

# redis
redis.host=127.0.0.1
redis.port=6379
redis.password=
# cache expiry times
redis.cache.default_entry_expiry_time_in_seconds=3600
redis.sentinel.master.name=master
hsa.unit.cache.expiry=86400
hsa.healthcareunit.cache.expiry=86400
hsa.healthcareprovider.cache.expiry=86400
hsa.healhcareunitmembers.cache.expiry=86400
hsa.employee.cache.expiry=86400
pu.cache.expiry=86400

# taskCoordinator
task.cache.expiry=300
taskCoordinatorService.simultaneous.calls.allowed=-1

# The logical target address for HSA
hsa.ws.service.logicaladdress=SE165565594230-1000
# The target URL for the HSA web service
hsa.ws.services.url=${baseUrl}/api/hsa

# SAML authentication setup
saml.idp.metadata.file=classpath:security/idp-inera.xml
saml.sp.metadata.file=classpath:security/sp-inera.xml
saml.keystore.file=
saml.keystore.alias=
saml.keystore.password=

# OIDC / JWS
idp.oidc.jwks.url=https://idp.ineratest.org/oidc/jwks.json
idp.oidc.jwks.skew=30

# Certificate file and password for HSA
hsa.ws.certificate.file=
hsa.ws.certificate.password=
hsa.ws.certificate.type=PKCS12
hsa.ws.key.manager.password=

# Trust store
hsa.ws.truststore.file=
hsa.ws.truststore.password=
hsa.ws.truststore.type=

# The path to the login URL (i.e. excluding protocol, host and port)
login.url=fakelogin

# When to run the scheduler for processing new intyg (e.g. decorate with HSA data and add to the wideline table)
scheduler.logJob.cron=0 0/5 * * * ?
# When to run the scheduler for reloading intyg from the database into the in-memory representation used for statistics calculations
scheduler.factReloadJob.cron=0 0 3 * * ?

# Login will be disabled if the following request header (both name and value must match) is set
hide.login.request.param.name=x-forwarded-host
# A regexp for value matching
hide.login.request.param.value=.*\\bnologin\\.host\\b.*

# app stuff
reports.nationell.cutoff=5
reports.landsting.cutoff=5
scb.population.url=http://api.scb.se/OV0104/v1/doris/sv/ssd/START/BE/BE0101/BE0101A/BefolkningNy

# log external trace-id from HTTP header
log.trace.header=x-trace-id

ntjp.base.url=${baseUrl}/services/stubs
infrastructure.directory.authorizationmanagement.getcredentialsforpersonincludingprotectedpersonresponderinterface.endpoint.url=${ntjp.base.url}/infrastructure/directory/authorizationmanagement/GetCredentialsForPersonIncludingProtectedPerson/2/rivtabp21
infrastructure.directory.organization.getunit.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetUnit/3/rivtabp21
infrastructure.directory.organization.gethealthcareunit.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetHealthCareUnit/2/rivtabp21
infrastructure.directory.organization.gethealthcareunitmembers.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetHealthCareUnitMembers/2/rivtabp21
infrastructure.directory.employee.getemployee.endpoint.url=${ntjp.base.url}/infrastructure/directory/employee/GetEmployeeIncludingProtectedPerson/2/rivtabp21
infrastructure.directory.authorizationmanagement.gethospcredentialsforpersonresponderinterface.endpoint.url=${ntjp.base.url}/infrastructure/directory/authorizationmanagement/GetHospCredentialsForPerson/1/rivtabp21
infrastructure.directory.authorizationmanagement.gethosplastupdateresponderinterface.endpoint.url=${ntjp.base.url}/infrastructure/directory/authorizationmanagement/GetHospLastUpdate/1/rivtabp21
infrastructure.directory.authorizationmanagement.handlehospcertificationpersonresponderinterface.endpoint.url=${ntjp.base.url}/infrastructure/directory/authorizationmanagement/HandleHospCertificationPerson/1/rivtabp21
infrastructure.directory.organization.gethealthcareprovider.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetHealthCareProvider/1/rivtabp21

infrastructure.directory.logicalAddress=

################################################
#
# NTjP WebService Configuration
#
################################################

ntjp.ws.certificate.file=${application.dir}/certifikat/test.statistik.jks
ntjp.ws.certificate.type=JKS
ntjp.ws.truststore.file=${application.dir}/certifikat/hsa-truststore.jks
ntjp.ws.truststore.type=JKS

project.version=0
buildTime=0

# Dynamic links
dynamic.links.file=classpath:/links/statistik.links.json

# HSA stub dynamic identities
hsa.stub.additional.identities.folder=

# Fileservice
hsaunits.url=https://wstest.hsa.sjunet.org/hsafileservice/informationlist/hsaunits.zip
scheduler.fileservice.cron=0 0 5 * * ?

# Intygsadmin
intygsadmin.url=http://localhost:8170
intygsadmin.cache.expiry=86400
intygsadmin.cron=0 * * * * ?

# Internal API
internal.api.port=8150

# settings for parallel/concurrent calculation tasks
calcCoordinator.maxConcurrentTasks=4
calcCoordinator.maxWaitingTasks=${calcCoordinator.maxConcurrentTasks}
calcCoordinator.waitTimeoutMillis=15000
