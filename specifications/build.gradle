buildscript {
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.1.8'
        classpath 'se.inera.intyg:gradle-fitnesse-plugin:1.0-SNAPSHOT'
    }
}

description = 'Inera Statistics Fitnesse specifications'

apply plugin: 'groovy'
apply plugin: 'inera-fitnesse'

fitnesse {
    port = 9125
    root = "FitNesseRoot"
    workingDir = "src/test/fitnesse"
}

if (project.hasProperty('runFitnesse')) {
    apply plugin: 'org.akhikhl.gretty'
    gretty {
        contextPath = '/'
        contextConfigFile = project(":statistik-web").projectDir.path + "/src/main/webapp/WEB-INF/jetty-context.xml"
        logbackConfigFile = "${projectDir}/src/main/resources/logback-test.xml"
        jvmArgs = [
                '-Dspring.profiles.active=dev,embedded,hsa-stub,security-fake,skipTestIntygInjection',
                '-Dstatistics.config.file=' + project(":statistik-web").projectDir.path + '/src/main/resources/default.dev.properties',
                '-Dstatistics.credentials.file=' + project(":statistik-web").projectDir.path + '/src/main/resources/dev-credentials.properties'
        ]
//        jvmArgs = ['-Dspring.profiles.active=dev,embedded,hsa-stub,security-fake', '-Dstatistics.test.max.intyg=1', '-XX:MaxPermSize=256M']
    }

    farm {
        webapp ":statistik-web"
        webapp project
        integrationTestTask = 'fitnesseTest'
    }

    dependencies {
        gretty "com.h2database:h2:${h2Version}"
        gretty "mysql:mysql-connector-java:${mysqlConnectorVersion}"
        gretty "org.apache.activemq:activemq-broker:${activeMqVersion}"
        gretty "org.apache.tomcat:tomcat-catalina:${tomcatVersion}"
     }
}

clean {
    delete "${projectDir}/src/test/fitnesse/FitNesseRoot/ErrorLogs"
    delete "${projectDir}/src/test/fitnesse/FitNesseRoot/files/testResults"
    delete "${projectDir}/catalina.base_IS_UNDEFINED"
}

dependencies {
    compile project(":statistik-web")

    compile "org.fitnesse:fitnesse:${fitnessVersion}"
    compile "org.codehaus.groovy:groovy-all:2.4.0"
    compile "org.codehaus.groovy.modules.http-builder:http-builder:${groovyHttpVersion}"
    compile "org.apache.httpcomponents:httpmime:${httpVersion}"
    compile "org.apache.httpcomponents:httpcore:${httpVersion}"
}
