apply plugin: 'groovy'

sourceSets {
    test {
        // compile everything in src/test with groovy (enables cross-compiling)
        java { srcDirs = [] }
        groovy { srcDirs = ["src/test/groovy", "src/test/java"] }
    }
}

// JPA expects classes and configuration files to be in the same directory.
sourceSets.main.output.resourcesDir = sourceSets.main.java.destinationDirectory
// B/c of the above, we create duplicates within the JAR. This configuration excludes the duplicates.
jar.duplicatesStrategy = DuplicatesStrategy.EXCLUDE

dependencies {
    implementation project(':hsa-integration')
    implementation project(':logging')

    implementation "co.elastic.logging:logback-ecs-encoder:${logbackEcsEncoderVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.h2database:h2"
    implementation "net.javacrumbs.shedlock:shedlock-provider-redis-spring:${shedlockSpringVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-spring:${shedlockSpringVersion}"
    implementation "org.apache.cxf:cxf-rt-features-logging:${cxfVersion}"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxws:${cxfVersion}"
    implementation "org.apache.httpcomponents.client5:httpclient5"
    implementation "org.hibernate.orm:hibernate-hikaricp"
    implementation "com.zaxxer:HikariCP"
    implementation "org.liquibase:liquibase-core"
    implementation "org.springframework.session:spring-session-data-redis"
    implementation 'jakarta.transaction:jakarta.transaction-api'
    implementation "org.springframework:spring-orm"
    implementation "org.springframework:spring-jms"
    implementation "org.springframework:spring-webmvc"
    implementation "se.inera.intyg.infra:common-redis-cache-core:${infraVersion}"
    implementation "se.inera.intyg.infra:monitoring:${infraVersion}"
    implementation "se.inera.intyg.infra:security-common:${infraVersion}"
    implementation "se.inera.intyg.clinicalprocess.healthcond.certificate:intyg-clinicalprocess-healthcond-certificate-schematron:${intygSchematronVersion}"
    implementation "se.inera.intyg.transportstyrelsen:intyg-transportstyrelsen-schemas:${intygTransportstyrelsenSchemasVersion}"
    implementation "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"
    implementation "jakarta.persistence:jakarta.persistence-api"
    implementation 'org.glassfish.jaxb:jaxb-runtime'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
    implementation "org.apache.activemq:activemq-spring"

    compileOnly "jakarta.jms:jakarta.jms-api:${jakartaMessagingApiVersion}"

    testImplementation "org.aspectj:aspectjweaver"
    testImplementation "org.apache.groovy:groovy-all:${groovyAllVersion}"
    testImplementation "org.eclipse.jetty:jetty-server"
    testImplementation "commons-io:commons-io:${commonsIoVersion}"

    // This will make sure we use the liquibase patch in the web module.
    // It needs to be in this module to make sure it ends up before the jar version on the classpath in Tomcat
    testImplementation files(project(':statistik-web').sourceSets.main.output)
}