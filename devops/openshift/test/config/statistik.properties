########################################
#
# HSA-Integration Configurations
#
########################################

config.dir=${statistics.config.folder}

# H2 configuration
db.driver=com.mysql.jdbc.Driver
db.url=jdbc:mysql://${database.server}:${database.port}/${database.name}?useCompression=true&amp;useSSL=false

# Hibernate Configuration
hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.hbm2ddl.auto=
hibernate.show_sql=false
hibernate.format_sql=${hibernate.show_sql}

# The logical target address for HSA
hsa.ws.service.logicaladdress=SE165565594230-1000
# The target URL for the HSA web service
hsa.ws.services.url=${baseUrl}/api/hsa

# SAML authentication setup
saml.entityId=
saml.entityBaseUrl=
saml.idp.metadata.file=${config.dir}/idp-sakerhetstjanst.xml
saml.sp.metadata.file=${config.dir}/sp-sakerhetstjanst.xml

saml.keystore.file=file://${certificate.folder}/login.certificate.jks
saml.truststore.file=file://${certificate.folder}/ntjp.truststore.jks
saml.keystore.alias=


# Certificate file and password for HSA
hsa.ws.certificate.file=
hsa.ws.certificate.type=PKCS12

# Trust store
hsa.ws.truststore.file=
hsa.ws.truststore.type=

# The path to the login URL (i.e. excluding protocol, host and port)
login.url=fakelogin

# When to run the scheduler for processing new intyg (e.g. decorate with HSA data and add to the wideline table)
scheduler.logJob.cron=0/20 * * * * ?
# When to run the scheduler for reloading intyg from the database into the in-memory representation used for statistics calculations
scheduler.factReloadJob.cron=0 0 3 * * ?

# Login will be disabled if the following request header (both name and value must match) is set
hide.login.request.param.name=x-forwarded-host
# A regexp for value matching
hide.login.request.param.value=.*\\bnologin\\.host\\b.*


ntjp.base.url=${baseUrl}/services/stubs
infrastructure.directory.authorizationmanagement.getcredentialsforpersonincludingprotectedpersonresponderinterface.endpoint.url=${ntjp.base.url}/infrastructure/directory/authorizationmanagement/GetCredentialsForPersonIncludingProtectedPerson/1/rivtabp21
infrastructure.directory.organization.getunit.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetUnit/1/rivtabp21
infrastructure.directory.organization.gethealthcareunit.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetHealthCareUnit/1/rivtabp21
infrastructure.directory.organization.gethealthcareunitmembers.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetHealthCareUnitMembers/1/rivtabp21
infrastructure.directory.employee.getemployee.endpoint.url=${ntjp.base.url}/infrastructure/directory/employee/GetEmployeeIncludingProtectedPerson/1/rivtabp21

infrastructure.directory.logicalAddress=

################################################
#
# NTjP WebService Configuration
#
################################################

ntjp.ws.certificate.file=${certificate.folder}/test.statistik.jks
ntjp.ws.certificate.type=JKS
ntjp.ws.truststore.file=${certificate.folder}/hsa-truststore.jks
ntjp.ws.truststore.type=JKS

project.version=0
buildTime=0

# Dynamic links
dynamic.links.file=${statistics.resources.folder}/links/statistik.links.json

# HSA stub dynamic identities
hsa.stub.additional.identities.folder=
