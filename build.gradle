plugins {
    id "se.inera.intyg.plugin.common" version "3.2.2" apply false
    id "se.inera.intyg.plugin.fitnesse" version "1.1.2" apply false
    id "org.gretty" version "3.0.8" apply false
    id "nebula.node" version "1.4.2" apply false
    id "io.spring.dependency-management" version "1.0.13.RELEASE" apply false
}

ext {
    infraVersion = System.properties['infraVersion'] ?: '3.18.0-SNAPSHOT'
    refDataVersion = System.properties['refDataVersion'] ?: '1.0-SNAPSHOT'

    intygSchematronVersion = "1.0.57"
    rivtaClinicalprocessSchemasVersion = "4.0.5"
    internalMonitoringSchemaVersion = "1.0.4"
    intygTransportstyrelsenSchemasVersion = "1.0.5"

    auth0JwksVersion = "0.21.1"
    commonsIoVersion = "2.11.0"
    commonsLoggingVersion = "1.2"
    commonsTextVersion = "1.10.0"
    cxfVersion = '3.5.3'
    fitnesseVersion = "20220815"
    gatlingVersion = "3.8.4"
    geronimoVersion = "1.1.1"
    googleGuavaVersion = "31.1-jre"
    gparsVersion = "1.2.1"
    groovyAllVersion = "3.0.12"
    groovyHttpVersion = "0.7.1"
    jaxb2Version = "0.13.1"
    jsonwebtokenVersion = "0.11.5"
    picocliVersion = "4.6.3"
    poiVersion = "5.2.3"
    schematronVersion = "5.6.5"
    springSecuritySamlVersion = "1.0.3.RELEASE"
    xalanVersion = "2.7.2"
    xmlApisVersion = "1.4.01"
    zipletVersion = "2.4.1"
    shedlockSpringVersion = "4.42.0"
    wagonVersion = "3.5.2"

    nodeJsVersion = "12.22.12"
    npmVersion = "6.14.16"

    springbootMavenBomVersion = "2.7.3"
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "https://nexus.drift.inera.se/repository/it-public/" }
        mavenCentral {
            content {
                // this repository contains everything BUT artifacts with group starting with "se.inera"
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    // Spotbugs does not work very well with groovy code. Hence we exclude groovy projects.
    ext.spotbugsExclude = "(fileservice|.*groovy)\$"

    // Errorprone has no mechanism (yet) for excluding generated code. We therefore disable it for hsa-integration.
    ext.errorproneExclude = "hsa-integration"

    apply plugin: 'maven'
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports { mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}" }
    }

    dependencies {
        compile "ch.qos.logback:logback-classic"
        compile "com.google.guava:guava:${googleGuavaVersion}"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testCompile "junit:junit"
        testCompile "org.springframework:spring-test"
        testCompile "org.mockito:mockito-core"
        testCompile "se.inera.intyg.refdata:refdata:${refDataVersion}"
    }

    group = 'se.inera.statistik'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    sourceCompatibility = 11
    targetCompatibility = 11

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    test {
        exclude '**/*FunctionalTest.*'
    }

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.enabled = false

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://nexus.drift.inera.se/repository/maven-releases/") {
            authentication(userName: System.properties['ineraNexusUsername'], password: System.properties['ineraNexusPassword'])
        }
    }

    [install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
        pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.infra' }.each {
            it.version = se.inera.intyg.IntygPluginKt.findResolvedVersion(project, 'se.inera.intyg.infra')
        }
    }
}

configure(subprojects.findAll { ['statistik-service', 'web'].contains(it.name) }) {
    test {
        exclude '**/*IT*'
    }

    task integrationTest(type: Test) {
        outputs.upToDateWhen { false }
        include '**/*IT*'
    }
}

apply from: "checkPnr.gradle"

task tagRelease(type: TagReleaseTask)
