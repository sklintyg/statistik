plugins {
    id "se.inera.intyg.plugin.common" version "3.1.4" apply false
    id "se.inera.intyg.plugin.fitnesse" version "1.0.10" apply false
    id "org.gretty" version "3.0.1" apply false
    id "com.moowork.node" version "1.3.1" apply false
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

ext {
    infraVersion = System.properties['infraVersion'] ?: '3.16.2-SNAPSHOT'
    refDataVersion = System.properties['refDataVersion'] ?: '1.0-SNAPSHOT'

    intygSchematronVersion = "1.0.57"
    rivtaClinicalprocessSchemasVersion = "4.0.5"
    internalMonitoringSchemaVersion = "1.0.4"
    intygTransportstyrelsenSchemasVersion = "1.0.5"

    commonsIoVersion = "2.6"
    commonsLoggingVersion = "1.2"
    commonsTextVersion = "1.8"
    cxfVersion = '3.2.4'
    googleGuavaVersion = "28.2-jre"
    gparsVersion = "1.2.1"
    groovyAllVersion = "2.4.19"
    groovyHttpVersion = "0.7.1"
    h2Version = "2.1.210"
    hibernateVersion = "5.3.15.Final"
    javaxWsRsApiVersion = "2.0.1"
    jaxb2Version = "1.11.1"
    jakartaJwsApiVersion = "2.1.0"
    jaxbXjcVersion = "2.3.2"
    jaxbCoreVersion = "2.3.0.1"
    jaxbImplVersion = "2.3.1"
    gatlingVersion = "3.3.1"
    geronimoVersion = "1.1.1"
    jsonwebtokenVersion = "0.11.1"
    auth0JwksVersion = "0.11.0"
    liquibaseVersion = "2.0.5"
    poiVersion = "4.1.2"
    schematronVersion = "5.5.0"
    springSecuritySamlVersion = "1.0.3.RELEASE"
    tomcatVersion = "9.0.31"
    xalanVersion = "2.7.2"
    xmlApisVersion = "1.4.01"
    zipletVersion = "2.4.1"
    shedlockSpringVersion = "4.5.0"
    wagonVersion = "3.3.4"

    fitnesseVersion = "20200308"
    jettyVersion = "9.4.12.v20180830"

    nodeJsVersion = "10.16.2"
    npmVersion = "6.10.3"

    springbootMavenBomVersion = "2.2.5.RELEASE"
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "https://nexus.drift.inera.se/repository/it-public/" }
        mavenCentral {
            content {
                // this repository contains everything BUT artifacts with group starting with "se.inera"
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    // Spotbugs does not work very well with groovy code. Hence we exclude groovy projects.
    ext.spotbugsExclude = "(fileservice|.*groovy)\$"

    // Errorprone has no mechanism (yet) for excluding generated code. We therefore disable it for hsa-integration.
    ext.errorproneExclude = "hsa-integration"

    apply plugin: 'maven'
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports { mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}" }
    }

    dependencies {
        // Exclude and import of non-BOM version of Hibernate due to
        // bug in BOM-version 5.4.12.
        compile("org.hibernate:hibernate-core") {
            version {
                strictly "${hibernateVersion}"
            }
        }
        compile("org.hibernate:hibernate-hikaricp") {
            version {
                strictly "${hibernateVersion}"
            }
        }
        compile("org.hibernate:hibernate-entitymanager") {
            version {
                strictly "${hibernateVersion}"
            }
        }

        compile "ch.qos.logback:logback-classic"
        compile "com.google.guava:guava:${googleGuavaVersion}"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testCompile "junit:junit:4.+"
        testCompile "org.springframework:spring-test"
        testCompile "org.mockito:mockito-core"
        testCompile "se.inera.intyg.refdata:refdata:${refDataVersion}"
    }

    group = 'se.inera.statistik'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    sourceCompatibility = 11
    targetCompatibility = 11

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    test {
        exclude '**/*FunctionalTest.*'
    }

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.enabled = false

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://nexus.drift.inera.se/repository/maven-releases/") {
            authentication(userName: System.properties['ineraNexusUsername'], password: System.properties['ineraNexusPassword'])
        }
    }

    [install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
        pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.infra' }.each {
            it.version = se.inera.intyg.IntygPluginKt.findResolvedVersion(project, 'se.inera.intyg.infra')
        }
    }
}

configure(subprojects.findAll { ['statistik-service', 'web'].contains(it.name) }) {
    test {
        exclude '**/*IT*'
    }

    task integrationTest(type: Test) {
        outputs.upToDateWhen { false }
        include '**/*IT*'
    }
}

apply from: "checkPnr.gradle"

task tagRelease(type: TagReleaseTask)
